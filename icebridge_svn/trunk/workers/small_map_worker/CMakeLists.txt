ADD_DEFINITIONS(-DDEBUG)
ADD_DEFINITIONS("-Wall -ansi -pedantic -g -fpermissive")
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/third_party/include)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/third_party/lib)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/module)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/workers)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/workers/small_map_worker)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/workers/worker_common)
#SET(SRC_LIST main.cpp gameLogger.cpp redisClient.cpp AppLogger.cpp ofxLog.cpp ofxLogger.cpp)
#SET(SRC_LIST ${PROJECT_SOURCE_DIR}/src/*.cpp)
FILE(GLOB MODULE_LIST "${PROJECT_SOURCE_DIR}/module/*.cpp") 
FILE(GLOB MAIN_LIST "./*.cpp")  
FILE(GLOB SERVICE_LIST "../worker_common/*.cpp") 
ADD_EXECUTABLE(small_map_worker ${MODULE_LIST} ${MESSAGES_LIST} ${SERVICE_LIST} ${MAIN_LIST})
TARGET_LINK_LIBRARIES(small_map_worker PocoUtild PocoDataMySQLd PocoDatad PocoZipd PocoDataSQLited PocoNetd PocoXMLd jsoncpp boost_system boost_date_time hiredis msgpack zmq czmq pthread PocoFoundationd mysqlclient z rt dl)
INSTALL(TARGETS small_map_worker RUNTIME DESTINATION bin)
